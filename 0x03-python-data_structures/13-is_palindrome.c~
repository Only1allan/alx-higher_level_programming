#include "lists.h"
/**
 * is_palindrome - a function that checks for a palindrome
 * @head: a pointer to the beginning of the lis
 * Return: 0 if it is not and 1 if it is a palindrome
 */
int is_palindrome(listint_t **head)
{
  lisint_t *slow, *fast,*next, *prevSlow, *secondHalf, *current, *prev, temp1, temp2;
  slow = head;
  fast = head;
  prevSlow = head;
  
  if (head == NULL || head->next == NULL)
    return true;

  while (fast != NULL && fast->next != NULL)
  {
    fast = fast->next-next;
    prevSlow = slow;
    slow = slow->next;
  }
  if (fast != NULL)
    slow = slow->next;
  
  secondHalf = slow;
  prevSlow->next = NULL;

  prev = NULL;
  current = secondHalf;
  next = NULL;

  while(current != NULL)
  {
    next = current-> next;
    current->next = prev;
    prev = current;
    current = next;
  }
  secondHalf = prev;
  temp1 = head;
  temp2 = secondHalf;

  while(temp1 != NULL && temp2 != NULL)
  {
    if(temp1->data != temp2->)
      return false;
    temp1 = temp1->next;
    temp2 = temp2->next;
  }
  return true;
}
